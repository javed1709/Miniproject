{"version":3,"sources":["../src/index.ts","../src/htmlBuilder.ts","../src/client.ts"],"sourcesContent":["export { Onedoc } from \"./client\";\nexport { HtmlBuilder } from \"./htmlBuilder\";\n","export class HtmlBuilder {\n  private title?: string;\n  private start: string = `<!DOCTYPE html>\n                             <html  lang=\"en\">\n                                <head>\n                                    <meta charset = \"UTF-8\">\n                                    <meta name=\"viewport\" content=\"width=device-width\">`;\n  private middle: string = `\n                                </head>\n                                <body>`;\n\n  private end: string = `</body>\n                        </html>`;\n\n  constructor(title?: string) {\n    this.title = title;\n  }\n\n  build(document: string, styleSheets?: string[]) {\n    if (styleSheets) {\n      styleSheets.forEach((path) => {\n        this.start += `<link rel = \"stylesheet\" href=${path} />`;\n      });\n    }\n\n    if (this.title) {\n      this.start += `<title>${this.title}</title>`;\n    }\n\n    this.middle += document;\n\n    return this.start + this.middle + this.end;\n  }\n}\n","import { HtmlBuilder } from \"./htmlBuilder\";\nimport mime from \"mime-types\";\n\nexport interface Asset {\n  path: string;\n  content: string;\n}\nexport interface PathBuffer {\n  path: string;\n  content: Buffer;\n}\n\ntype AssetOrPathBuffer = Asset | PathBuffer;\n\nexport interface ExternalLink {\n  href: string;\n}\nexport interface DocumentInput {\n  html: string;\n  title?: string;\n  test?: boolean;\n  assets?: AssetOrPathBuffer[];\n  save?: boolean;\n  /**\n   * Number of seconds to cache the file in the CDN for.\n   */\n  expiresIn?: number;\n  //| ExternalLink\n}\n\nconst DEFAULT_FILE_OPTIONS: any = {\n  cacheControl: \"3600\",\n  contentType: \"text/plain;charset=UTF-8\",\n  upsert: false,\n};\n\ntype FileBody =\n  | ArrayBuffer\n  | ArrayBufferView\n  | Blob\n  | File\n  | FormData\n  | ReadableStream<Uint8Array>\n  | URLSearchParams\n  | string;\n\nexport class Onedoc {\n  private apiKey: string;\n  private endpoint: string;\n\n  constructor(apiKey: string, endpoint: string = \"https://api.fileforge.com\") {\n    this.apiKey = apiKey;\n    this.endpoint = endpoint;\n  }\n\n  private buildUrl(path: string) {\n    return `${this.endpoint}${path}`;\n  }\n\n  async render(document: DocumentInput): Promise<any> {\n    const assets: AssetOrPathBuffer[] = document.assets ?? [];\n    assets.push({ path: \"/index.html\", content: document.html });\n\n    const test: boolean = document.test ?? true;\n    const save: boolean = document.save ?? false;\n\n    const expires_in: number = document.expiresIn ?? 1;\n    const expires_at: Date = new Date(\n      Date.now() + expires_in * 24 * 60 * 60 * 1000\n    );\n    const expires_at_iso: string = expires_at.toISOString();\n\n    const formData = new FormData();\n\n    const optionsBlob = new Blob(\n      [\n        JSON.stringify({\n          test: test,\n          host: save,\n          expiresAt: expires_at_iso,\n          fileName: document.title ?? \"document\",\n        }),\n      ],\n      { type: \"application/json\" }\n    );\n\n    formData.append(\"options\", optionsBlob);\n\n    assets.forEach((asset) => {\n      if (asset.path === \"/index.html\" && asset.content) {\n        // Assuming _HtmlBuilder exists and is imported\n        const htmlBuilder = new HtmlBuilder(document.title);\n        const styleSheets = assets\n          .filter((a) => a.path.endsWith(\".css\"))\n          .map((a) => a.path);\n\n        const html = htmlBuilder.build(document.html, styleSheets);\n\n        const fileBlob = new Blob([html],{ type: \"text/html\" })\n\n        formData.append('files', fileBlob, \"index.html\");\n\n  \n      } else if (asset.content) {\n\n        const assetType = mime.lookup(asset.path) || \"application/octet-stream\";\n\n        const fileBlob = new Blob([asset.content],{ type: assetType })\n\n        formData.append('files', fileBlob, asset.path);\n\n      }\n    });\n\n    const response: Response = await fetch(\n      await this.buildUrl(\"/pdf/generate\"),\n      {\n        method: \"POST\",\n        headers: {\n          \"x-api-key\": this.apiKey,\n        },\n        body: formData,\n      }\n    );\n\n    if (response.status === 201) {\n      if (!save) {\n        return {\n          file: await response.arrayBuffer(),\n          link: null,\n          error: null,\n          info: {},\n        };\n      } else {\n        const jsonResponse = await response.json();\n        return { file: null, link: jsonResponse.url, error: null, info: {} };\n      }\n    } else {\n      const error = await response.json();\n      return { file: null, link: null, error: error, info: {} };\n    }\n  }\n}\n"],"mappings":"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","names":["mime"]}