{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHAIK JAVED\\\\OneDrive\\\\Desktop\\\\Miniproject\\\\questgen\\\\src\\\\components\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './upload.css'; // Import the specific CSS file for UploadPage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [fileUrl, setFileUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [extractedData, setExtractedData] = useState('');\n  const [questions, setQuestions] = useState('');\n  const [queryText, setQueryText] = useState('');\n  const [rawText, setRawText] = useState('');\n  const handleFileUrlChange = e => {\n    setFileUrl(e.target.value);\n  };\n  const handleUpload = async () => {\n    if (!fileUrl) return;\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3322/upload', {\n        fileUrl,\n        queryText\n      });\n      setExtractedData(response.data.extractedData);\n      setQuestions(response.data.questions);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleQuery = async () => {\n    if (!rawText) return;\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:3322/query', {\n        rawText,\n        queryText\n      });\n      setExtractedData(rawText); // Set rawText as extractedData\n      setQuestions(response.data.queryResult); // Set queryResult as questions\n    } catch (error) {\n      console.error('Error querying text:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleQueryTextChange = e => {\n    setQueryText(e.target.value);\n  };\n  const handleRawTextChange = e => {\n    setRawText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fileUrl,\n        onChange: handleFileUrlChange,\n        placeholder: \"Enter the URL of the text file\",\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        className: \"upload-button\",\n        disabled: loading,\n        children: loading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: queryText,\n        onChange: handleQueryTextChange,\n        placeholder: \"Enter prompt for Gemini AI\",\n        className: \"upload-query-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: rawText,\n        onChange: handleRawTextChange,\n        placeholder: \"Enter raw text to query\",\n        className: \"upload-raw-text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuery,\n        className: \"upload-button\",\n        disabled: loading,\n        children: loading ? 'Querying...' : 'Get Query'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-preview-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-generated-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Extracted Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: extractedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadPage, \"/Bb0S40tywbDa/+g1YG39bP16O0=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPage","_s","fileUrl","setFileUrl","loading","setLoading","extractedData","setExtractedData","questions","setQuestions","queryText","setQueryText","rawText","setRawText","handleFileUrlChange","e","target","value","handleUpload","response","post","data","error","console","handleQuery","queryResult","handleQueryTextChange","handleRawTextChange","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SHAIK JAVED/OneDrive/Desktop/Miniproject/questgen/src/components/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './upload.css'; // Import the specific CSS file for UploadPage\r\n\r\nconst UploadPage = () => {\r\n    const [fileUrl, setFileUrl] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [extractedData, setExtractedData] = useState('');\r\n    const [questions, setQuestions] = useState('');\r\n    const [queryText, setQueryText] = useState('');\r\n    const [rawText, setRawText] = useState('');\r\n\r\n    const handleFileUrlChange = (e) => {\r\n        setFileUrl(e.target.value);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!fileUrl) return;\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:3322/upload', { fileUrl, queryText });\r\n            setExtractedData(response.data.extractedData);\r\n            setQuestions(response.data.questions);\r\n        } catch (error) {\r\n            console.error('Error uploading file:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleQuery = async () => {\r\n        if (!rawText) return;\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3322/query', { rawText, queryText });\r\n            setExtractedData(rawText); // Set rawText as extractedData\r\n            setQuestions(response.data.queryResult); // Set queryResult as questions\r\n        } catch (error) {\r\n            console.error('Error querying text:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleQueryTextChange = (e) => {\r\n        setQueryText(e.target.value);\r\n    };\r\n\r\n    const handleRawTextChange = (e) => {\r\n        setRawText(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-page-container\">\r\n            <div className=\"upload-form-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={fileUrl}\r\n                    onChange={handleFileUrlChange}\r\n                    placeholder=\"Enter the URL of the text file\"\r\n                    className=\"upload-input\"\r\n                />\r\n                <button onClick={handleUpload} className=\"upload-button\" disabled={loading}>\r\n                    {loading ? 'Uploading...' : 'Upload'}\r\n                </button>\r\n                <input\r\n                    type=\"text\"\r\n                    value={queryText}\r\n                    onChange={handleQueryTextChange}\r\n                    placeholder=\"Enter prompt for Gemini AI\"\r\n                    className=\"upload-query-input\"\r\n                />\r\n                <textarea\r\n                    value={rawText}\r\n                    onChange={handleRawTextChange}\r\n                    placeholder=\"Enter raw text to query\"\r\n                    className=\"upload-raw-text-input\"\r\n                />\r\n                <button onClick={handleQuery} className=\"upload-button\" disabled={loading}>\r\n                    {loading ? 'Querying...' : 'Get Query'}\r\n                </button>\r\n            </div>\r\n            <div className=\"upload-preview-container\">\r\n                <div className=\"upload-generated-results\">\r\n                    <h3>Extracted Data:</h3>\r\n                    <pre>{extractedData}</pre>\r\n                    <h3>Generated Questions:</h3>\r\n                    <pre>{questions}</pre>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}