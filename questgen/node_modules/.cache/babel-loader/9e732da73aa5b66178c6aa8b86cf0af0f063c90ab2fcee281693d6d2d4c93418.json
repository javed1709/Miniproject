{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHAIK JAVED\\\\OneDrive\\\\Desktop\\\\Miniproject\\\\questgen\\\\src\\\\components\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './upload.css'; // Import the specific CSS file for UploadPage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadLoading, setUploadLoading] = useState(false); // Separate loading state for upload\n  const [queryLoading, setQueryLoading] = useState(false); // Separate loading state for query\n  const [extractedData, setExtractedData] = useState('');\n  const [questions, setQuestions] = useState('');\n  const [queryText, setQueryText] = useState('');\n  const [rawText, setRawText] = useState('');\n  const [examType, setExamType] = useState('sem'); // State for radio button selection\n  const [date, setDate] = useState('');\n  const [anFn, setAnFn] = useState('');\n  const [courseName, setCourseName] = useState('');\n  const [courseCode, setCourseCode] = useState('');\n  const [semester, setSemester] = useState('');\n  const [collegeName, setCollegeName] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    setUploadLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('queryText', queryText);\n    formData.append('examType', examType); // Append examType to formData\n    formData.append('date', date);\n    formData.append('anFn', anFn);\n    formData.append('courseName', courseName);\n    formData.append('courseCode', courseCode);\n    formData.append('semester', semester);\n    formData.append('collegeName', collegeName);\n    try {\n      const response = await axios.post('http://localhost:3322/upload', formData);\n      setExtractedData(response.data.extractedData);\n      setQuestions(response.data.questions);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setUploadLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: queryText,\n        onChange: e => setQueryText(e.target.value),\n        placeholder: \"Enter prompt for Gemini AI\",\n        className: \"upload-query-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        placeholder: \"Date\",\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: anFn,\n        onChange: e => setAnFn(e.target.value),\n        placeholder: \"AN or FN\",\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: courseName,\n        onChange: e => setCourseName(e.target.value),\n        placeholder: \"Course Name\",\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: courseCode,\n        onChange: e => setCourseCode(e.target.value),\n        placeholder: \"Course Code\",\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: semester,\n        onChange: e => setSemester(e.target.value),\n        placeholder: \"Semester\",\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: collegeName,\n        onChange: e => setCollegeName(e.target.value),\n        placeholder: \"College Name\",\n        className: \"upload-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        className: \"upload-button\",\n        disabled: uploadLoading,\n        children: uploadLoading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadPage, \"7ctKhb2OyVyvf8NN/owfHYwEuog=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPage","_s","file","setFile","uploadLoading","setUploadLoading","queryLoading","setQueryLoading","extractedData","setExtractedData","questions","setQuestions","queryText","setQueryText","rawText","setRawText","examType","setExamType","date","setDate","anFn","setAnFn","courseName","setCourseName","courseCode","setCourseCode","semester","setSemester","collegeName","setCollegeName","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","data","error","console","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SHAIK JAVED/OneDrive/Desktop/Miniproject/questgen/src/components/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './upload.css'; // Import the specific CSS file for UploadPage\r\n\r\nconst UploadPage = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [uploadLoading, setUploadLoading] = useState(false); // Separate loading state for upload\r\n    const [queryLoading, setQueryLoading] = useState(false); // Separate loading state for query\r\n    const [extractedData, setExtractedData] = useState('');\r\n    const [questions, setQuestions] = useState('');\r\n    const [queryText, setQueryText] = useState('');\r\n    const [rawText, setRawText] = useState('');\r\n    const [examType, setExamType] = useState('sem'); // State for radio button selection\r\n    const [date, setDate] = useState('');\r\n    const [anFn, setAnFn] = useState('');\r\n    const [courseName, setCourseName] = useState('');\r\n    const [courseCode, setCourseCode] = useState('');\r\n    const [semester, setSemester] = useState('');\r\n    const [collegeName, setCollegeName] = useState('');\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) return;\r\n\r\n        setUploadLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('queryText', queryText);\r\n        formData.append('examType', examType); // Append examType to formData\r\n        formData.append('date', date);\r\n        formData.append('anFn', anFn);\r\n        formData.append('courseName', courseName);\r\n        formData.append('courseCode', courseCode);\r\n        formData.append('semester', semester);\r\n        formData.append('collegeName', collegeName);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3322/upload', formData);\r\n            setExtractedData(response.data.extractedData);\r\n            setQuestions(response.data.questions);\r\n        } catch (error) {\r\n            console.error('Error uploading file:', error);\r\n        } finally {\r\n            setUploadLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-page-container\">\r\n            <div className=\"upload-form-container\">\r\n                {/* Existing inputs */}\r\n                <input type=\"file\" onChange={handleFileChange} className=\"upload-input\" />\r\n                <input\r\n                    type=\"text\"\r\n                    value={queryText}\r\n                    onChange={(e) => setQueryText(e.target.value)}\r\n                    placeholder=\"Enter prompt for Gemini AI\"\r\n                    className=\"upload-query-input\"\r\n                />\r\n                {/* Additional form fields */}\r\n                <input\r\n                    type=\"date\"\r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                    placeholder=\"Date\"\r\n                    className=\"upload-input\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={anFn}\r\n                    onChange={(e) => setAnFn(e.target.value)}\r\n                    placeholder=\"AN or FN\"\r\n                    className=\"upload-input\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={courseName}\r\n                    onChange={(e) => setCourseName(e.target.value)}\r\n                    placeholder=\"Course Name\"\r\n                    className=\"upload-input\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={courseCode}\r\n                    onChange={(e) => setCourseCode(e.target.value)}\r\n                    placeholder=\"Course Code\"\r\n                    className=\"upload-input\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={semester}\r\n                    onChange={(e) => setSemester(e.target.value)}\r\n                    placeholder=\"Semester\"\r\n                    className=\"upload-input\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={collegeName}\r\n                    onChange={(e) => setCollegeName(e.target.value)}\r\n                    placeholder=\"College Name\"\r\n                    className=\"upload-input\"\r\n                />\r\n                <button onClick={handleUpload} className=\"upload-button\" disabled={uploadLoading}>\r\n                    {uploadLoading ? 'Uploading...' : 'Upload'}\r\n                </button>\r\n                {/* Additional elements remain unchanged */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}