{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHAIK JAVED\\\\OneDrive\\\\Desktop\\\\Miniproject\\\\questgen\\\\src\\\\components\\\\SurveyFormPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyFormPage = () => {\n  _s();\n  const [latexCode, setLatexCode] = useState('');\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const handleInputChange = event => {\n    setLatexCode(event.target.value);\n    setPdfUrl(null);\n  };\n  const handleCompile = async () => {\n    try {\n      const response = await fetch('https://tinyurl.com/cmpillatex', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          latex: latexCode\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to compile LaTeX');\n      }\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleLoadLatexFromFile = async filePath => {\n    try {\n      const response = await fetch(filePath);\n      if (!response.ok) {\n        throw new Error('Failed to fetch text file');\n      }\n      const text = await response.text();\n      setLatexCode(text);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LaTeX Compiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLoadLatexFromFile('midqp.txt'),\n      children: \"Load Mid Paper LaTeX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLoadLatexFromFile('semqp.txt'),\n      children: \"Load Sem Paper LaTeX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"20\",\n      cols: \"100\",\n      value: latexCode,\n      onChange: handleInputChange,\n      placeholder: \"Enter LaTeX code here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCompile,\n      children: \"Compile LaTeX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Compiled PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: pdfUrl,\n        width: \"100%\",\n        height: \"600px\",\n        title: \"PDF Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(SurveyFormPage, \"aK6jTShPtRPrpBSfc6B7J5EBF4o=\");\n_c = SurveyFormPage;\nexport default SurveyFormPage;\nvar _c;\n$RefreshReg$(_c, \"SurveyFormPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SurveyFormPage","_s","latexCode","setLatexCode","pdfUrl","setPdfUrl","handleInputChange","event","target","value","handleCompile","response","fetch","method","headers","body","JSON","stringify","latex","ok","Error","blob","url","URL","createObjectURL","error","console","handleLoadLatexFromFile","filePath","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","cols","onChange","placeholder","handleDownload","src","width","height","title","_c","$RefreshReg$"],"sources":["C:/Users/SHAIK JAVED/OneDrive/Desktop/Miniproject/questgen/src/components/SurveyFormPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SurveyFormPage = () => {\r\n    const [latexCode, setLatexCode] = useState('');\r\n    const [pdfUrl, setPdfUrl] = useState(null);\r\n\r\n    const handleInputChange = (event) => {\r\n        setLatexCode(event.target.value);\r\n        setPdfUrl(null);\r\n    };\r\n\r\n    const handleCompile = async () => {\r\n        try {\r\n            const response = await fetch('https://tinyurl.com/cmpillatex', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ latex: latexCode }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to compile LaTeX');\r\n            }\r\n\r\n            const blob = await response.blob();\r\n            const url = URL.createObjectURL(blob);\r\n            setPdfUrl(url);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleLoadLatexFromFile = async (filePath) => {\r\n        try {\r\n            const response = await fetch(filePath);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch text file');\r\n            }\r\n            const text = await response.text();\r\n            setLatexCode(text);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>LaTeX Compiler</h1>\r\n            <button onClick={() => handleLoadLatexFromFile('midqp.txt')}>Load Mid Paper LaTeX</button>\r\n            <button onClick={() => handleLoadLatexFromFile('semqp.txt')}>Load Sem Paper LaTeX</button>\r\n            <br />\r\n            <textarea\r\n                rows=\"20\"\r\n                cols=\"100\"\r\n                value={latexCode}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter LaTeX code here\"\r\n            />\r\n            <br />\r\n            <button onClick={handleCompile}>Compile LaTeX</button>\r\n            {pdfUrl && (\r\n                <div>\r\n                    <h2>Compiled PDF</h2>\r\n                    <button onClick={handleDownload}>Download PDF</button>\r\n                    <br /><br />\r\n                    <iframe src={pdfUrl} width=\"100%\" height=\"600px\" title=\"PDF Preview\"></iframe>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SurveyFormPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}